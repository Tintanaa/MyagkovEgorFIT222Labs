type 
  точка = record
    x,y,z: real;
    грань:integer;
    constructor Create(xa,ya,za: real); begin (x,y,z) := (xa,ya,za) end;
  end;
 
 var k,l,m: real;
  точка1, точка2: точка;
//1 - главная (z=0), 2 - слева(x=0), 3 - снизу(y=0), 
//4 - спереди(z=max), 5 - справа(x=max), 6 - сверху(y=max)
Function НомерГрани(точкаA: точка): integer; //определяем номер грани
begin 
 if ТочкаA.z = 0 then Result := 1
 else if ТочкаA.x = k then Result := 5
 else if ТочкаA.z = m then Result := 4
 else if ТочкаA.x = 0 then Result := 2
 else if ТочкаA.y = 0 then Result := 3
 else if ТочкаA.y = l then Result := 6;
end;
 
procedure ПоворотOy;
Procedure поворотY(var ТочкаA: точка); //против часовой по оси Oy
begin case точкаA.грань of
    1: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (0, ТочкаA.y, m-ТочкаA.x); //1 > 2
    2: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (ТочкаA.z, ТочкаA.y, m);  //2 > 4
    3: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (ТочкаA.z, 0, m-ТочкаA.x); //3 > 3 rotate
    4: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (k, ТочкаA.y, m-ТочкаA.x); //4 > 5
    5: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (ТочкаA.z, ТочкаA.y, 0);// 5 > 1
    6: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (ТочкаA.z, l, m-ТочкаA.x); // 6 > 6 rotate
  end; end;  
begin
  swap(k,m);
  поворотY(Точка1); Точка1.грань := НомерГрани(Точка1);
  поворотY(Точка2); Точка2.грань := НомерГрани(Точка2);
end;
 
procedure ПоворотOz;
Procedure поворотZ(var ТочкаA: точка); //против часовой по Oz
begin case точкаA.грань of
    1: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (k-ТочкаA.y,ТочкаA.x, 0); //1 > 1 rotate
    2: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (k-ТочкаA.y, 0, ТочкаA.z);  //2 > 3
    3: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (k, ТочкаA.x, ТочкаA.z); //3 > 5 
    4: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (k-ТочкаA.y,ТочкаA.x, m); //4 > 4 rotate
    5: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (k-ТочкаA.y, l, ТочкаA.z);// 5 > 6
    6: (ТочкаA.x, ТочкаA.y, ТочкаA.z) := (0, ТочкаA.x, ТочкаA.z); // 6 > 2 
  end; end;  
begin
  swap(k,l);
  поворотZ(Точка1);  Точка1.грань := НомерГрани(Точка1);
  поворотZ(Точка2);  Точка2.грань := НомерГрани(Точка2);
end;
 
begin
 var x,y,z: real;
 var ok := true;
 
 repeat
  (k,l,m) := ReadlnReal3('Введите через пробел k,l,m:'); // координаты коробки
  if min(k,l,m) <= 0 then 
   begin Println('Недопустивмая координата.'); ok := false end else ok := true
 until ok;
 
 repeat
  (x,y,z) := ReadlnReal3('Введите через пробел координаты паука (x,y,z):');
  if (min(x,y,z) < 0) or (x>k) or (y>l) or (z > m) or (НомерГрани(new Точка(x,y,z))=0) then 
   begin Println('Недопустивмая координата.'); ok := false end else ok := true
 until ok;
 Точка1 := new Точка(x, y, z); Точка1.грань := НомерГрани(Точка1);
 
 repeat
  (x,y,z) := ReadlnInteger3('Введите через пробел координаты мухи (x,y,z):');
  if (min(x,y,z) < 0) or (x>k) or (y>l) or (z > m) or (НомерГрани(new Точка(x,y,z))=0) then 
   begin Println('Недопустивмая координата.'); ok := false end else ok := true
 until ok;
 Точка2 := new Точка(x, y, z);  Точка2.грань := НомерГрани(Точка2);
 
 if (Точка1.грань = 0) or (Точка2.грань = 0) then exit;
 
 if (Точка1.грань = Точка2.грань) then //если точки на одной грани,точка на выход
  begin
    Writeln('Мин. путь: ',((точка2.x-точка1.x)**2+(точка2.y-точка1.y)**2+
    (точка2.z-точка1.z)**2).Sqrt:2:3);
    exit;
  end;
  //Println('k,l,m:',k,l,m);  Println('x,y,z,НомерГрани: ',Точка1, Точка2);
  //разворот фигуры чтобы грань(точкa1) = 1 (Точка1.z=0)
  case Точка1.грань of 
    2: loop 3 do ПоворотOy; 
    3: begin ПоворотOz; ПоворотOy end;
    4: loop 2 do ПоворотOy; 
    5: ПоворотOy; 
    6: begin ПоворотOz; loop 3 do ПоворотOy end;
    end;
  //Println('x,y,z,НомерГрани: ',Точка1, Точка2, '- координаты после вращений');
 var Точки := new real[4,2];
 (Точки[3,0], Точки[3,1]) := (2*(k+l+m), 2*(k+l+m));//нужна только для Точка2.грань=4 
 case Точка2.грань of
  2: begin
      (Точки[0,0], Точки[0,1]) := (-l+Точка2.y, l+Точка2.z);//слева сверху
      (Точки[1,0], Точки[1,1]) := (-Точка2.z, Точка2.y); //слева
      (Точки[2,0], Точки[2,1]) := (-Точка2.y,-Точка2.z);//слева снизу
      end;
  3:begin
     (Точки[0,0], Точки[0,1]) := (-Точка2.z, -Точка2.x);//снизу слева
     (Точки[1,0], Точки[1,1]) := (Точка2.x, -Точка2.z); //снизу
     (Точки[2,0], Точки[2,1]) := (k+Точка2.z, -k+Точка2.x);//снизу справа
     end;
  4:begin //точку на противоположной грани разворачиваем на четыре стороны
     (Точки[0,0], Точки[0,1]) := (-k-Точка2.x, Точка2.y); //влево
     (Точки[1,0], Точки[1,1]) := (Точка2.x, l+ 2*l+m-Точка2.y); //вверх
     (Точки[2,0], Точки[2,1]) := (2*k+l-Точка2.x, Точка2.y); //вправо
     (Точки[3,0], Точки[3,1]) := (Точка2.x, -m-Точка2.y); //вниз    
     end;
  5:begin
     (Точки[0,0], Точки[0,1]) := (k+m-Точка2.y, l+Точка2.z);//справа сверху
     (Точки[1,0], Точки[1,1]) := (k+Точка2.z, Точка2.y); //справа
     (Точки[2,0], Точки[2,1]) := (k+Точка2.y, -Точка2.z);//справа снизу
     end;
  6:begin
     (Точки[0,0], Точки[0,1]) := (-Точка2.z,l+Точка2.x);//сверху справа
     (Точки[1,0], Точки[1,1]) := (Точка2.x, l+Точка2.z); //сверху
     (Точки[2,0], Точки[2,1]) := (k+Точка2.z,l+Точка2.x);//сверху слева
     end;
  end;
 { Print('Координаты точки2 на плоскости XY:');
    for var j := 0 to 2 do Print((точки[j,0],точки[j,1]));
    if Точка2.грань=4 then Print((точки[3,0],точки[3,1])); Println; }
 var minim := 0.0+k+l+m;
 for var j := 0 to 3 do
   minim := min (minim, ((точка1.x-точки[j,0])**2+(точка1.y-точки[j,1])**2).Sqrt);
 Writeln('Мин. путь: ', minim:0:3)
 end.